version: 2.1

jobs:
  build_debian_9:
    docker:
      - image: debian:9-slim
    steps:
      - run: |
          echo 'deb http://deb.debian.org/debian stretch-backports main' >> /etc/apt/sources.list &&
          apt-get update &&
          apt-get install -y git cmake/stretch-backports libuv1/stretch-backports make g++
      - checkout
      - run: |
          git submodule update --init --recursive &&
          mkdir build &&
          cd build &&
          cmake .. &&
          cmake --build .

  build_ubuntu_1904:
    docker:
      - image: ubuntu:19.04
    steps:
      - run: |
          apt-get update &&
          apt-get install -y git cmake make g++
      - checkout
      - run: |
          git submodule update --init --recursive &&
          mkdir build &&
          cd build &&
          cmake .. &&
          cmake --build .

  build_fedora_30:
    docker:
      - image: fedora:30
    steps:
      - run: |
          dnf install -y git cmake make gcc-c++
      - checkout
      - run: |
          git submodule update --init --recursive &&
          mkdir build &&
          cd build &&
          cmake .. &&
          cmake --build .

  build_arch_latest:
    docker:
      - image: archlinux/base:latest
    steps:
      - run: |
          pacman -Sy &&
          pacman -S --noconfirm git cmake make gcc
      - checkout
      - run: |
          git submodule update --init --recursive &&
          mkdir build &&
          cd build &&
          cmake .. &&
          cmake --build .

# FIXME: The first run step fails with an error on "/bin/sh -eo pipefail".
#  build_void_latest:
#    docker:
#      - image: voidlinux/voidlinux:latest
#    steps:
#      - run: |
#          xbps-install -S &&
#          xbps-install git cmake make gcc
#      - checkout
#      - run: |
#          git submodule update --init --recursive &&
#          mkdir build &&
#          cd build &&
#          cmake .. &&
#          cmake --build .

  build_alpine_3.9:
    docker:
      - image: alpine:3.9
    steps:
      - run: |
          apk add git cmake make g++
      - checkout
      - run: |
          git submodule update --init --recursive &&
          mkdir build &&
          cd build &&
          cmake .. &&
          cmake --build .

workflows:
  version: 2
  build_all:
    jobs:
      - build_debian_9
      - build_ubuntu_1904
      - build_fedora_30
      - build_arch_latest
#     - build_void_latest
      - build_alpine_3.9
