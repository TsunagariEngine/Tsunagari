version: 2.1

jobs:
  # Has CMake 3.0, GCC 4.9
  # Uses CMake 3.8, GCC 4.9
  debian_8_jessie:
    docker:
      - image: debian:8-slim
    steps:
      - run: |
          apt-get update &&
          apt-get install -y --no-install-recommends ca-certificates curl g++ ninja-build &&
          (cd /opt; curl -L https://github.com/Kitware/CMake/releases/download/v3.8.0/cmake-3.8.0-Linux-x86_64.tar.gz | tar xz)
      - checkout
      - run: |
          mkdir build &&
          cd build &&
          /opt/cmake-3.8.0-Linux-x86_64/bin/cmake .. -G Ninja &&
          ninja

  # Has CMake 3.13, GCC 8
  debian_10_buster:
    docker:
      - image: debian:10-slim
    steps:
      - run: |
          apt-get update &&
          apt-get install -y --no-install-recommends cmake g++ ninja-build
      - checkout
      - run: |
          mkdir build &&
          cd build &&
          cmake .. -G Ninja &&
          ninja

  # Has CMake 3.10, GCC 7
  ubuntu_18_04_bionic:
    docker:
      - image: ubuntu:18.04
    steps:
      - run: |
          apt-get update &&
          apt-get install -y --no-install-recommends cmake g++ ninja-build
      - checkout
      - run: |
          mkdir build &&
          cd build &&
          cmake .. -G Ninja &&
          ninja

  # Has CMake 3.16, GCC 9, Ninja 1.10
  ubuntu_20_04_focal:
    docker:
      - image: ubuntu:20.04
    steps:
      - run: |
          apt-get update &&
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends cmake g++ ninja-build
      - checkout
      - run: |
          mkdir build &&
          cd build &&
          cmake .. -G Ninja &&
          ninja

  # Has CMake 3.9, GCC 6, Ninja 1.7
  fedora_24:
    docker:
      - image: fedora:24
    steps:
      - run: |
          dnf install -y git cmake gcc-c++ ninja-build
      - checkout
      - run: |
          mkdir build &&
          cd build &&
          cmake .. -G Ninja &&
          ninja

  # Has CMake 3.17, GCC 10
  fedora_32:
    docker:
      - image: fedora:32
    steps:
      - run: |
          dnf install -y git cmake gcc-c++ ninja-build
      - checkout
      - run: |
          mkdir build &&
          cd build &&
          cmake .. -G Ninja &&
          ninja

  arch_latest:
    docker:
      - image: archlinux/base:latest
    steps:
      - run: |
          pacman -Sy --noconfirm cmake gcc samurai
      - checkout
      - run: |
          mkdir build &&
          cd build &&
          cmake .. -G Ninja &&
          samu

  void:
    shell: /bin/sh
    docker:
      - image: voidlinux/voidlinux:latest
    steps:
      - run: |
          xbps-install -Suy xbps &&
          xbps-install -y bash cmake gcc samurai
      - checkout
      - run: |
          mkdir build &&
          cd build &&
          cmake .. -G Ninja &&
          samu

  void_musl:
    shell: /bin/sh
    docker:
      - image: voidlinux/voidlinux-musl:latest
    steps:
      - run: |
          xbps-install -Suy xbps &&
          xbps-install -y cmake gcc samurai
      - checkout
      - run: |
          mkdir build &&
          cd build &&
          cmake .. -G Ninja &&
          samu

  # Has CMake 3.8, GCC 6, Ninja 1.7
  alpine_3_6:
    docker:
      - image: alpine:3.6
    steps:
      - run: |
          apk add cmake g++ ninja
      - checkout
      - run: |
          mkdir build &&
          cd build &&
          cmake .. -G Ninja &&
          ninja

  # Has CMake 3.17, GCC 9, Samurai 1.1
  alpine_3_12:
    docker:
      - image: alpine:3.12
    steps:
      - run: |
          apk add cmake g++ samurai
      - checkout
      - run: |
          mkdir build &&
          cd build &&
          cmake .. -G Ninja &&
          samu

workflows:
  version: 2
  build_all:
    jobs:
      - debian_8_jessie
      - debian_10_buster
      - ubuntu_18_04_bionic
      - ubuntu_20_04_focal
      - fedora_24
      - fedora_32
      - arch_latest
      - void
      - void_musl
      - alpine_3_6
      - alpine_3_12
